<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zjl.crm.workbench.dao.CustomerDao">
	<select id="getCustomerByName" resultType="Customer">
        select * from tbl_customer where name=#{name}
    </select>
    <insert id="save" >
        insert into tbl_customer(
        id,
        owner,
        name,
        website,
        phone,
        createBy,
        createTime,
        contactSummary,
        nextContactTime,
        description,
        address
        )values (
        #{id},
        #{owner},
        #{name},
        #{website},
        #{phone},
        #{createBy},
        #{createTime},
        #{contactSummary},
        #{nextContactTime},
        #{description},
        #{address}
        )
    </insert>
    <select id="getCustomerListByCondition" resultType="Customer">
        select
        a.id,
        u.name as owner,
        a.name,
        a.website,
        a.phone
        from tbl_customer a
        join tbl_user u
        on a.owner=u.id
        <where>
            <if test="customer.owner != null and customer.owner != ''">
                u.name like '%' #{customer.owner} '%'
            </if>
            <if test="customer.name != null and customer.name != ''">
                and a.name like '%' #{customer.name} '%'
            </if>
            <if test="customer.website != null and customer.website != ''">
                and a.website like '%' #{customer.website} '%'
            </if>
            <if test="customer.phone != null and customer.phone != ''">
                and a.phone like '%' #{customer.phone} '%'
            </if>
        </where>
        order by a.createTime desc
        limit #{skipCount},#{pageSize}
    </select>
  	<select id="getTotalByCondition" resultType="int">
        select count(*)
        from tbl_customer a
        join tbl_user u
        on a.owner=u.id
        <where>
            <if test="customer.owner != null and customer.owner != ''">
                u.name like '%' #{customer.owner} '%'
            </if>
            <if test="customer.name != null and customer.name != ''">
                and a.name like '%' #{customer.name} '%'
            </if>
            <if test="customer.website != null and customer.website != ''">
                and a.website like '%' #{customer.website} '%'
            </if>
            <if test="customer.phone != null and customer.phone != ''">
                and a.phone like '%' #{customer.phone} '%'
            </if>
        </where>
    </select>
    <delete id="delete">
        delete from tbl_customer
        where id in
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <select id="getCustomerById" resultType="Customer">
        select * from tbl_customer where id=#{id}
    </select>
    <update id="update">
        update tbl_customer set
        owner=#{owner},
        name=#{name},
        website=#{website},
        phone=#{phone},
        editBy=#{editBy},
        editTime=#{editTime},
        contactSummary=#{contactSummary},
        nextContactTime=#{nextContactTime},
        description=#{description},
        address=#{address}
        where
        id=#{id}
    </update>
    <select id="detail" resultType="com.zjl.crm.workbench.domain.Customer">
        select
        a.id,
        u.name as owner,
        a.name,
        a.website,
        a.phone,
        a.createBy,
        a.createTime,
        a.editBy,
        a.editTime,
        a.contactSummary,
        a.nextContactTime,
        a.description,
        a.address
        from tbl_customer a
        join tbl_user u
        on a.owner=u.id
        where a.id=#{id}
    </select>
    <delete id="deleteById">
        delete from tbl_customer
        where id=#{id}
    </delete>
    <select id="getCustomerName" resultType="String">
        select name from tbl_customer where name like '%' #{name} '%'
    </select>
</mapper>

































